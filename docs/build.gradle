buildscript {
  ext {
    adocOutputDir = project.file("$buildDir/asciidoc")
  }

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
  }
}

plugins {
  id 'idea'
  id 'org.asciidoctor.convert' version '1.5.7'
  id 'org.ajoberstar.git-publish' version '0.3.0'
}

apply plugin: 'base'

wrapper {
  gradleVersion = '4.8'
  distributionType = 'BIN'
}

group = 'com.github.daggerok'
version = '0.0.1'

clean.doFirst {
  [
      project.buildDir,
      project.file('out'),
      project.file('bin'),
      project.file('build'),
      project.file('target'),
      project.file('public'),
      project.file('.project'),
      project.file('.settings'),
      project.file('.classpath'),
  ].each { delete it }
}

asciidoctor {
  sourceDir = project.file('src')
  sources {
    include 'index.adoc'
  }
  outputDir = adocOutputDir
  attributes toc: 'left',
      doctype: 'book',
      ruby: 'erubis',
      encoding: 'utf-8',
      linkattrs: true,
      numbered: true,
      sectanchors: true,
      sectlink: true,
      idprefix: '',
      docinfo1: '',
      icons: 'font',
      idseparator: '-',
      setanchors: 'true',
      imagesdir: './static/images',
      'source-highlighter': 'coderay',
      'toc-title': 'Table of Contents',
      'root-project-name': rootProject.name,
      'build-gradle': project.file('build.gradle'),
      'github-url': "https://github.com/daggerok/$rootProject.name",
      'gitlab-url': "https://gitlab.com/daggerok/$rootProject.name",
      'bitbucket-url': "https://bitbucket.com/daggerok/$rootProject.name"

  logDocuments = true
  //backends 'pdf', 'html5'
  backends = ['html5', 'pdf']
}

asciidoctor.doLast {
  def html5 = "$adocOutputDir/html5"
  project.file("$html5/404.html").text = project.file("$html5/index.html").text
  project.file("$html5/.nojekyll").text = ''
}

task documentation(type: Copy, dependsOn: asciidoctor) {
  shouldRunAfter clean, asciidoctor
  from "$asciidoctor.outputDir/html5"
  from "$asciidoctor.outputDir/pdf"
  from "$asciidoctor.sourceDir/static", {
    into '.'
  }
  into "$rootDir/../public"
}

gitPublish {
  // repoUri = "git@gitlab.com:daggerok/${rootProject.name}.git" // same gitlab plugin?
  repoUri = "git@github.com:daggerok/${rootProject.name}.git"
  branch = 'gh-pages'

  contents {
    from "$rootDir/../public", {
      into '.'
    }
  }

  commitMessage = "Publish $rootProject.name documentation (${project.group}:${project.name}:$project.version)"
}

gitPublishPush.dependsOn documentation
gitPublishPush.shouldRunAfter clean, documentation

task docs(dependsOn: gitPublishPush) {
  shouldRunAfter clean, asciidoctor
}
